@model IEnumerable<stickynotes.Models.Sticky>

@{
    ViewData["Title"] = "Notes";
}

<div class="container d-flex flex-wrap">
    <div class="card sticky" style="width:18rem">
        <div class="card-body">
<<<<<<< HEAD
            <form asp-action="Create" autocomplete="off">
=======
            <form id="NoteForm" asp-action="Create">
>>>>>>> aa92cdda118153344b53405c815d6c90854b6067
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label for="NoteTitle" class="control-label">Title</label>
                    <input type="text" id="NoteTitle" name="NoteTitle" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="NoteText" class="control-label">Text</label>
                    <input type="text" id="NoteText" name="NoteText" class="form-control"/>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
@foreach (var item in Model)
{
    <div class="card sticky" style="width:18rem">
        <div class="card-body">
            <h5 class="card-title">@Html.DisplayFor(modelItem => item.NoteTitle)</h5>
            <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.PostTime)</h6>
            <p class="card-text">@Html.DisplayFor(modelItem => item.NoteText)</p>
            <a class="card-link" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
            <a class="card-link" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
        </div>
    </div>
}
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function submitFetch(){
            var title = document.getElementById("NoteTitle").value;
            var text = document.getElementById("NoteText").value;
            var authToken = document.getElementById("NoteForm").__RequestVerificationToken.value;
            console.log(authToken);

            data = {NoteTitle:title, NoteText:text, __RequestVerificationToken:authToken};
            url = "stickies/Create";
            postData(url, data);
        }
        async function postData(url = '', data = {}) {
            const response = await fetch(url, {
                method: 'POST',
                mode: 'cors',
                cache: 'no-cache',
                credentials: 'same-origin',
                headers: {
                    'Content-Type': 'application/json'
                },
                redirect: 'follow',
                referrerPolicy: 'no-referrer',
                body: JSON.stringify(data)
            });
            return response.json();
        }
    </script>
}